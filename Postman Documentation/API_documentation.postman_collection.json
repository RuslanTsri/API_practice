{
	"info": {
		"_postman_id": "d52444f2-5539-4427-a8d3-62abdd1d009b",
		"name": "API_documentation",
		"description": "# Документація по використанню CRUD операцій\n\nЦя документація пояснює, як використовувати CRUD операції для роботи з юристами. Нижче наведено URL для кожної операції:\n\n## Операції:\n\n- **Get All Lawyers**:  \n    `GET https://localhost:5000/lawyers`\n    \n- **Get Lawyer By ID**:  \n    `GET https://localhost:5000/lawyers/{id}`  \n    (Введіть ID юриста)\n    \n- **Post Lawyer**:  \n    `POST https://localhost:5000/addLawyer`\n    \n- **Patch Lawyer**:  \n    `PATCH https://localhost:5000/updateLawyer/{id}`\n    \n- **Delete Lawyer**:  \n    `DELETE https://localhost:5000/deleteLawyer/{id}`\n    \n\n## Структура даних:\n\n``` json\n{\n  \"id\": \" \", // Прописувати не потрібно, автоматично визначається\n  \"first_name\": \" \",\n  \"last_name\": \" \",\n  \"middle_name\": \" \",\n  \"email\": \" \",\n  \"contact\": \" \",\n  \"experience\": \" \",\n  \"UNITE_number\": \" \" // Прописувати не потрібно, визначається автоматично\n}\n\n ```\n\n## Технології:\n\nСервер використовувався з фреймворку Node.js з інструментом автоматичного перезапуску  \nпри змінах у файлі nodemon.\n\n## ПАТЧ-НОУТ 30 січня 2025 року (30.01.2025):\n\n1. Було додано автентифікацію за ролями:\n    \n    - **Admin** (адміністратор) має повний доступ.\n        \n    - **Lawyer** (простий юзер) може переглядати лише свої дані.\n        \n2. **Endpoints** були розподілені в окремі директиви:\n    \n    - **CRUD**: для операцій з юристами.\n        \n    - **Auth**: для операцій автентифікації та авторизації.\n        \n3. Додані нові CRUD операції:\n    \n    - **POST Register**: реєстрація користувача за полями `email`, `password`, `role`.\n        \n    - **POST Activation code**: активація аккаунту за полями `email` та `activationCode`.\n        \n    - **POST Login**: авторизація аккаунту та генерування JWT токену.\n        \n        ## Використання:\n        \n          \n        Першим ділом вам потрібно запустити сервер. За це відповідає файл `server.js`.  \n        В програмі Postman використати реєстрацію, активацію, авторизацію, де отримаєте JWT токен.  \n        Шаблони вже прописані в вкладці Body кожної CRUD операції.  \n        Потім, для використання основних CRUD операцій спочатку виберіть у вкладці **Authorization** тип \"Bearer Token\", а в поле **Token**  \n        вставте згенерований токен автентифікації.\n\n**УВАГА:** Проєкт адаптований поки що лише під дві ролі Admin, та Lawyer (звичаний User).\n\n## Логування:\n\nУ самому **PHPStorm** я додав логування, щоб ви могли спостерігати за процесом роботи проєкту.\n\n---\n\n### Автор:\n\nЦимбалюк Руслан\n\n### Група:\n\nІПЗ-23-4\n\n### Email:\n\n[ipz234_tsri@student.ztu.edu.ua](https://mailto:ipz234_tsri@student.ztu.edu.ua)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41659980"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "POST Register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@example.com\",\r\n    \"password\": \"password123\",\r\n    \"role\": \"Admin\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/auth/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Activation code",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@example.com\",\r\n    \"activationCode\": \"1SGTHQ\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/auth/activate",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"auth",
								"activate"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"test@example.com\",\r\n    \"password\": \"password123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CRUD",
			"item": [
				{
					"name": "GET Lawyer By ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJ0ZXN0QGV4YW1wbGUuY29tIiwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM4MjYwODU3LCJleHAiOjE3MzgyNjQ0NTd9.G8QI6AEfAJYsvrYT0fr_Y4mY__6ev2vhNE_tco5IiME",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/lawyer/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"lawyer",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Lawyer",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJ0ZXN0QGV4YW1wbGUuY29tIiwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM4MjYxMjA4LCJleHAiOjE3MzgyNjQ4MDh9.I7ZiffMyRI-lG0AsytOuPx9JbdvGxxKxqt2AjNlp6mA",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/deleteLawyer/2\n",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"deleteLawyer",
								"2\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH Lawyer",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJ0ZXN0QGV4YW1wbGUuY29tIiwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM4MjYxMjA4LCJleHAiOjE3MzgyNjQ4MDh9.I7ZiffMyRI-lG0AsytOuPx9JbdvGxxKxqt2AjNlp6mA",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"contact\": \"0636224514\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/updateLawyer/1\n",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"updateLawyer",
								"1\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Lawyers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 404\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(404);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    const requiredFields = [\"<!DOCTYPE html>\", \"<html lang=\\\"en\\\">\", \"<head>\", \"<meta charset=\\\"utf-8\\\">\", \"<title>Error</title>\", \"<body>\", \"<pre>Cannot GET /lawyers%0A</pre>\"];\r",
									"\r",
									"    const responseData = pm.response.text();\r",
									"\r",
									"    requiredFields.forEach(function(field) {\r",
									"        pm.expect(responseData).to.include(field, `Response should include: ${field}`);\r",
									"    });\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content type is 'text/html'\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/html\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Validate that the response body follows the HTML schema\", function () {\r",
									"    pm.expect(pm.response.text()).to.include('<!DOCTYPE html>');\r",
									"    pm.expect(pm.response.text()).to.include('<html lang=\"en\">');\r",
									"    pm.expect(pm.response.text()).to.include('<head>');\r",
									"    pm.expect(pm.response.text()).to.include('<meta charset=\"utf-8\">');\r",
									"    pm.expect(pm.response.text()).to.include('<title>Error</title>');\r",
									"    pm.expect(pm.response.text()).to.include('</head>');\r",
									"    pm.expect(pm.response.text()).to.include('<body>');\r",
									"    pm.expect(pm.response.text()).to.include('<pre>Cannot GET /lawyers%0A</pre>');\r",
									"    pm.expect(pm.response.text()).to.include('</body>');\r",
									"    pm.expect(pm.response.text()).to.include('</html>');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJ0ZXN0QGV4YW1wbGUuY29tIiwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM4MjYxMjA4LCJleHAiOjE3MzgyNjQ4MDh9.I7ZiffMyRI-lG0AsytOuPx9JbdvGxxKxqt2AjNlp6mA",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/lawyers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"lawyers"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Lawyer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJ0ZXN0QGV4YW1wbGUuY29tIiwicm9sZSI6IkFkbWluIiwiaWF0IjoxNzM4MjYxMjA4LCJleHAiOjE3MzgyNjQ4MDh9.I7ZiffMyRI-lG0AsytOuPx9JbdvGxxKxqt2AjNlp6mA",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"John\",\r\n    \"last_name\": \"Doe\",\r\n    \"email\": \"test@example.com\",\r\n    \"contact\": \"123456789\",\r\n    \"experience\": \"Lawyer\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/lawyers/addLawyer",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"lawyers",
								"addLawyer"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}